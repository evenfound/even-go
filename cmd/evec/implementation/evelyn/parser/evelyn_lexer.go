// Code generated from Evelyn.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 11, 101,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 7, 6, 48,
	10, 6, 12, 6, 14, 6, 51, 11, 6, 3, 7, 3, 7, 5, 7, 55, 10, 7, 3, 8, 5, 8,
	58, 10, 8, 3, 9, 5, 9, 61, 10, 9, 3, 10, 6, 10, 64, 10, 10, 13, 10, 14,
	10, 65, 3, 10, 3, 10, 3, 11, 6, 11, 71, 10, 11, 13, 11, 14, 11, 72, 3,
	11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 7, 12, 81, 10, 12, 12, 12, 14, 12,
	84, 11, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3,
	13, 7, 13, 95, 10, 13, 12, 13, 14, 13, 98, 11, 13, 3, 13, 3, 13, 3, 82,
	2, 14, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 2, 15, 2, 17, 2, 19, 8, 21, 9,
	23, 10, 25, 11, 3, 2, 6, 22, 2, 50, 59, 1634, 1643, 1778, 1787, 2408, 2417,
	2536, 2545, 2664, 2673, 2792, 2801, 2920, 2929, 3049, 3057, 3176, 3185,
	3304, 3313, 3432, 3441, 3666, 3675, 3794, 3803, 3874, 3883, 4162, 4171,
	4971, 4979, 6114, 6123, 6162, 6171, 65298, 65307, 260, 2, 67, 92, 99, 124,
	172, 172, 183, 183, 188, 188, 194, 216, 218, 248, 250, 545, 548, 565, 594,
	687, 690, 698, 701, 707, 722, 723, 738, 742, 752, 752, 892, 892, 904, 904,
	906, 908, 910, 910, 912, 931, 933, 976, 978, 985, 988, 1013, 1026, 1155,
	1166, 1222, 1225, 1226, 1229, 1230, 1234, 1271, 1274, 1275, 1331, 1368,
	1371, 1371, 1379, 1417, 1490, 1516, 1522, 1524, 1571, 1596, 1602, 1612,
	1651, 1749, 1751, 1751, 1767, 1768, 1788, 1790, 1810, 1810, 1812, 1838,
	1922, 1959, 2311, 2363, 2367, 2367, 2386, 2386, 2394, 2403, 2439, 2446,
	2449, 2450, 2453, 2474, 2476, 2482, 2484, 2484, 2488, 2491, 2526, 2527,
	2529, 2531, 2546, 2547, 2567, 2572, 2577, 2578, 2581, 2602, 2604, 2610,
	2612, 2613, 2615, 2616, 2618, 2619, 2651, 2654, 2656, 2656, 2676, 2678,
	2695, 2701, 2703, 2703, 2705, 2707, 2709, 2730, 2732, 2738, 2740, 2741,
	2743, 2747, 2751, 2751, 2770, 2770, 2786, 2786, 2823, 2830, 2833, 2834,
	2837, 2858, 2860, 2866, 2868, 2869, 2872, 2875, 2879, 2879, 2910, 2911,
	2913, 2915, 2951, 2956, 2960, 2962, 2964, 2967, 2971, 2972, 2974, 2974,
	2976, 2977, 2981, 2982, 2986, 2988, 2992, 2999, 3001, 3003, 3079, 3086,
	3088, 3090, 3092, 3114, 3116, 3125, 3127, 3131, 3170, 3171, 3207, 3214,
	3216, 3218, 3220, 3242, 3244, 3253, 3255, 3259, 3296, 3296, 3298, 3299,
	3335, 3342, 3344, 3346, 3348, 3370, 3372, 3387, 3426, 3427, 3463, 3480,
	3484, 3507, 3509, 3517, 3519, 3519, 3522, 3528, 3587, 3634, 3636, 3637,
	3650, 3656, 3715, 3716, 3718, 3718, 3721, 3722, 3724, 3724, 3727, 3727,
	3734, 3737, 3739, 3745, 3747, 3749, 3751, 3751, 3753, 3753, 3756, 3757,
	3759, 3762, 3764, 3765, 3775, 3782, 3784, 3784, 3806, 3807, 3842, 3842,
	3906, 3948, 3978, 3981, 4098, 4131, 4133, 4137, 4139, 4140, 4178, 4183,
	4258, 4295, 4306, 4344, 4354, 4443, 4449, 4516, 4522, 4603, 4610, 4616,
	4618, 4680, 4682, 4682, 4684, 4687, 4690, 4696, 4698, 4698, 4700, 4703,
	4706, 4744, 4746, 4746, 4748, 4751, 4754, 4784, 4786, 4786, 4788, 4791,
	4794, 4800, 4802, 4802, 4804, 4807, 4810, 4816, 4818, 4824, 4826, 4848,
	4850, 4880, 4882, 4882, 4884, 4887, 4890, 4896, 4898, 4936, 4938, 4956,
	5026, 5110, 5123, 5752, 5763, 5788, 5794, 5868, 6018, 6069, 6178, 6265,
	6274, 6314, 7682, 7837, 7842, 7931, 7938, 7959, 7962, 7967, 7970, 8007,
	8010, 8015, 8018, 8025, 8027, 8027, 8029, 8029, 8031, 8031, 8033, 8063,
	8066, 8118, 8120, 8126, 8128, 8128, 8132, 8134, 8136, 8142, 8146, 8149,
	8152, 8157, 8162, 8174, 8180, 8182, 8184, 8190, 8321, 8321, 8452, 8452,
	8457, 8457, 8460, 8469, 8471, 8471, 8475, 8479, 8486, 8486, 8488, 8488,
	8490, 8490, 8492, 8495, 8497, 8499, 8501, 8507, 8546, 8581, 12295, 12297,
	12323, 12331, 12339, 12343, 12346, 12348, 12355, 12438, 12447, 12448, 12451,
	12540, 12542, 12544, 12551, 12590, 12595, 12688, 12706, 12729, 13314, 13314,
	19895, 19895, 19970, 19970, 40871, 40871, 40962, 42126, 44034, 44034, 55205,
	55205, 63746, 64047, 64258, 64264, 64277, 64281, 64287, 64287, 64289, 64298,
	64300, 64312, 64314, 64318, 64320, 64320, 64322, 64323, 64325, 64326, 64328,
	64435, 64469, 64831, 64850, 64913, 64916, 64969, 65010, 65021, 65138, 65140,
	65142, 65142, 65144, 65278, 65315, 65340, 65347, 65372, 65384, 65472, 65476,
	65481, 65484, 65489, 65492, 65497, 65500, 65502, 4, 2, 11, 11, 34, 34,
	4, 2, 12, 12, 15, 15, 2, 104, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7,
	3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 3, 27, 3, 2, 2, 2,
	5, 36, 3, 2, 2, 2, 7, 40, 3, 2, 2, 2, 9, 42, 3, 2, 2, 2, 11, 44, 3, 2,
	2, 2, 13, 54, 3, 2, 2, 2, 15, 57, 3, 2, 2, 2, 17, 60, 3, 2, 2, 2, 19, 63,
	3, 2, 2, 2, 21, 70, 3, 2, 2, 2, 23, 76, 3, 2, 2, 2, 25, 90, 3, 2, 2, 2,
	27, 28, 7, 101, 2, 2, 28, 29, 7, 113, 2, 2, 29, 30, 7, 112, 2, 2, 30, 31,
	7, 118, 2, 2, 31, 32, 7, 116, 2, 2, 32, 33, 7, 99, 2, 2, 33, 34, 7, 101,
	2, 2, 34, 35, 7, 118, 2, 2, 35, 4, 3, 2, 2, 2, 36, 37, 7, 120, 2, 2, 37,
	38, 7, 99, 2, 2, 38, 39, 7, 116, 2, 2, 39, 6, 3, 2, 2, 2, 40, 41, 7, 63,
	2, 2, 41, 8, 3, 2, 2, 2, 42, 43, 7, 61, 2, 2, 43, 10, 3, 2, 2, 2, 44, 49,
	5, 13, 7, 2, 45, 48, 5, 13, 7, 2, 46, 48, 5, 15, 8, 2, 47, 45, 3, 2, 2,
	2, 47, 46, 3, 2, 2, 2, 48, 51, 3, 2, 2, 2, 49, 47, 3, 2, 2, 2, 49, 50,
	3, 2, 2, 2, 50, 12, 3, 2, 2, 2, 51, 49, 3, 2, 2, 2, 52, 55, 5, 17, 9, 2,
	53, 55, 7, 97, 2, 2, 54, 52, 3, 2, 2, 2, 54, 53, 3, 2, 2, 2, 55, 14, 3,
	2, 2, 2, 56, 58, 9, 2, 2, 2, 57, 56, 3, 2, 2, 2, 58, 16, 3, 2, 2, 2, 59,
	61, 9, 3, 2, 2, 60, 59, 3, 2, 2, 2, 61, 18, 3, 2, 2, 2, 62, 64, 9, 4, 2,
	2, 63, 62, 3, 2, 2, 2, 64, 65, 3, 2, 2, 2, 65, 63, 3, 2, 2, 2, 65, 66,
	3, 2, 2, 2, 66, 67, 3, 2, 2, 2, 67, 68, 8, 10, 2, 2, 68, 20, 3, 2, 2, 2,
	69, 71, 9, 5, 2, 2, 70, 69, 3, 2, 2, 2, 71, 72, 3, 2, 2, 2, 72, 70, 3,
	2, 2, 2, 72, 73, 3, 2, 2, 2, 73, 74, 3, 2, 2, 2, 74, 75, 8, 11, 2, 2, 75,
	22, 3, 2, 2, 2, 76, 77, 7, 49, 2, 2, 77, 78, 7, 44, 2, 2, 78, 82, 3, 2,
	2, 2, 79, 81, 11, 2, 2, 2, 80, 79, 3, 2, 2, 2, 81, 84, 3, 2, 2, 2, 82,
	83, 3, 2, 2, 2, 82, 80, 3, 2, 2, 2, 83, 85, 3, 2, 2, 2, 84, 82, 3, 2, 2,
	2, 85, 86, 7, 44, 2, 2, 86, 87, 7, 49, 2, 2, 87, 88, 3, 2, 2, 2, 88, 89,
	8, 12, 2, 2, 89, 24, 3, 2, 2, 2, 90, 91, 7, 49, 2, 2, 91, 92, 7, 49, 2,
	2, 92, 96, 3, 2, 2, 2, 93, 95, 10, 5, 2, 2, 94, 93, 3, 2, 2, 2, 95, 98,
	3, 2, 2, 2, 96, 94, 3, 2, 2, 2, 96, 97, 3, 2, 2, 2, 97, 99, 3, 2, 2, 2,
	98, 96, 3, 2, 2, 2, 99, 100, 8, 13, 3, 2, 100, 26, 3, 2, 2, 2, 12, 2, 47,
	49, 54, 57, 60, 65, 72, 82, 96, 4, 2, 3, 2, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'contract'", "'var'", "'='", "';'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "IDENTIFIER", "WS", "TERMINATOR", "COMMENT", "LINE_COMMENT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "IDENTIFIER", "LETTER", "UNICODE_DIGIT",
	"UNICODE_LETTER", "WS", "TERMINATOR", "COMMENT", "LINE_COMMENT",
}

type EvelynLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewEvelynLexer(input antlr.CharStream) *EvelynLexer {

	l := new(EvelynLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Evelyn.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// EvelynLexer tokens.
const (
	EvelynLexerT__0         = 1
	EvelynLexerT__1         = 2
	EvelynLexerT__2         = 3
	EvelynLexerT__3         = 4
	EvelynLexerIDENTIFIER   = 5
	EvelynLexerWS           = 6
	EvelynLexerTERMINATOR   = 7
	EvelynLexerCOMMENT      = 8
	EvelynLexerLINE_COMMENT = 9
)
