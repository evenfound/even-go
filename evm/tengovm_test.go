package evm

import (
	"testing"

	. "github.com/smartystreets/goconvey/convey"
)

// bytecode was generated with xxd -i binary.out
var bytecode = Bytecode{
	0x45, 0x56, 0x45, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
	0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x4a, 0x2d, 0x4b,
	0xcd, 0x53, 0xb0, 0xb2, 0x55, 0xc8, 0xcc, 0x2d, 0xc8, 0x2f, 0x2a, 0xd1,
	0x50, 0x02, 0xf1, 0x95, 0x34, 0xb9, 0x8a, 0x52, 0x8b, 0x4b, 0x73, 0x4a,
	0x14, 0x6c, 0x15, 0x94, 0x94, 0xb8, 0x52, 0x52, 0xd3, 0x12, 0x41, 0x1c,
	0x2b, 0x5b, 0x85, 0xb4, 0xd2, 0xbc, 0x64, 0x0d, 0x4d, 0x85, 0x6a, 0xae,
	0x5a, 0x2e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x48, 0x58, 0x91, 0x40, 0x39, 0x00, 0x00, 0x00,
}

func TestRun(t *testing.T) {
	vm := New()
	Convey("evm.Run(goodScript) should work correctly", t, func() {
		str, err := vm.Run(bytecode, "")
		So(str, ShouldEqual, "")
		So(err, ShouldBeNil)
	})
	Convey("evm.Run(badScript) should return error", t, func() {
		str, err := vm.Run(Bytecode{0}, "")
		So(str, ShouldEqual, "")
		So(err, ShouldNotBeNil)
		So(err.Error(), ShouldEqual, "unexpected EOF")
	})
}
